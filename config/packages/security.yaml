security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        users:
            pattern: ^/api/users
            methods: [ GET, PUT, PATCH, DELETE ]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        login:
            pattern: ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        logs:
            pattern: ^/api/logs
            methods: [ GET ]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        emails:
            pattern: ^/api/emails
            methods: [ GET, POST ]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        animations:
            pattern: ^/api/animations
            methods: [POST, PUT, PATCH, DELETE]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        category:
            pattern: ^/api/categories
            methods: [ POST, PUT, PATCH, DELETE ]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        medias:
            pattern: ^/api/media
            methods: [ GET, POST, PUT, PATCH, DELETE ]
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_REDACTOR: ROLE_USER
        ROLE_MANAGER: [ ROLE_REDACTOR]
        ROLE_ADMIN: [ ROLE_MANAGER ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN ]
    access_control:
        - { path: ^/api/roles, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, PATCH, DELETE] }
        - { path: ^/api/users, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT, PATCH, DELETE] }
        - { path: ^/api/programs, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, PATCH, DELETE] }
        - { path: ^/api/animations, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, PATCH, DELETE] }
        - { path: ^/api/dates, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, PATCH, DELETE] }
        - { path: ^/api/logs, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }
        - { path: ^/api/emails, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST] }
        - { path: ^/api/animation_statuses, roles: IS_AUTHENTICATED_FULLY, methods: [GET, POST, PUT, PATCH, DELETE] }
        - { path: ^/api/themes, roles: IS_AUTHENTICATED_FULLY, methods: [ POST, PUT, PATCH, DELETE] }
        - { path: ^/api/type, roles: IS_AUTHENTICATED_FULLY, methods: [ POST, PUT, PATCH, DELETE] }
        - { path: ^/api/tags, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, PATCH, DELETE] }
        - { path: ^/api/media, roles: IS_AUTHENTICATED_FULLY, methods: [ GET, POST, PUT, PATCH, DELETE ] }
        - { path: ^/api/accessibilities, roles: IS_AUTHENTICATED_FULLY, methods: [ POST, PUT, PATCH, DELETE ] }
